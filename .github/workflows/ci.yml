name: CI with Coverage and SonarCloud
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint

      - name: Run tests and generate coverage report
        run: |
          coverage run -m unittest discover
          coverage xml -o cobertura.xml
          coverage report -m > coverage_report.txt

      - name: Run Pylint and generate report
        run: |
          # Lint de todo el paquete; no fallar el job si hay issues
          pylint backgammon --rcfile=.pylintrc -f text --exit-zero \
            | sed 's/\x1b\[[0-9;]*m//g' > pylint_report.txt

      - name: Generate reports file
        run: |
          cat << 'EOF' > generate_reports.py
          import os
          def read_file(filepath):
              if not os.path.exists(filepath):
                  return f"Error: Report file not found at {filepath}"
              with open(filepath, "r", encoding="utf-8") as f:
                  return f.read()
          coverage_report = read_file("coverage_report.txt")
          pylint_report = read_file("pylint_report.txt")
          reports_content = f"""# Automated Reports
          ## Coverage Report
          ```text
          {coverage_report}
          ```
          ## Pylint Report
          ```text
          {pylint_report}
          ```
          """
          with open("REPORTS.md", "w", encoding="utf-8") as f:
              f.write(reports_content)
          EOF
          python generate_reports.py

      - name: Create Pull Request for reports
        if: github.ref == 'refs/heads/main'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'docs: Update automated reports [skip ci]'
          title: 'Automated Reports Update'
          body: |
            ## Automated Reports Update
            This PR contains the latest automated reports:
            - Coverage Report
            - Pylint Report
            Generated by GitHub Actions workflow.
          branch: automated-reports-update
          delete-branch: true
          add-paths: |
            REPORTS.md
